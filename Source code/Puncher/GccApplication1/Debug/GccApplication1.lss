
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000646  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000646  000006ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006ce  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000700  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000073c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000015ea  00000000  00000000  0000075c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061a  00000000  00000000  00001d46  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a3c  00000000  00000000  00002360  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  00002d9c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034c  00000000  00000000  00002e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000017c1  00000000  00000000  00003158  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00004919  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e4       	ldi	r30, 0x46	; 70
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 21 03 	jmp	0x642	; 0x642 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <avr/io.h>
#include <util/delay.h>
int columns= 8;
int rows = 3;
int main(void)
{
  82:	6f 92       	push	r6
  84:	7f 92       	push	r7
  86:	8f 92       	push	r8
  88:	9f 92       	push	r9
  8a:	af 92       	push	r10
  8c:	bf 92       	push	r11
  8e:	cf 92       	push	r12
  90:	df 92       	push	r13
  92:	ef 92       	push	r14
  94:	ff 92       	push	r15
  96:	0f 93       	push	r16
  98:	1f 93       	push	r17
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
  a2:	60 97       	sbiw	r28, 0x10	; 16
  a4:	0f b6       	in	r0, 0x3f	; 63
  a6:	f8 94       	cli
  a8:	de bf       	out	0x3e, r29	; 62
  aa:	0f be       	out	0x3f, r0	; 63
  ac:	cd bf       	out	0x3d, r28	; 61
   DDRD=0xFF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	81 bb       	out	0x11, r24	; 17
   DDRB=0xFF;
  b2:	87 bb       	out	0x17, r24	; 23
   DDRC=0xff;
  b4:	84 bb       	out	0x14, r24	; 20
   DDRA=0xFF;
  b6:	8a bb       	out	0x1a, r24	; 26
   int c[]={1,1,1,1,1,1,1,1};
  b8:	80 e1       	ldi	r24, 0x10	; 16
  ba:	e4 e6       	ldi	r30, 0x64	; 100
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	de 01       	movw	r26, r28
  c0:	11 96       	adiw	r26, 0x01	; 1
  c2:	01 90       	ld	r0, Z+
  c4:	0d 92       	st	X+, r0
  c6:	8a 95       	dec	r24
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x40>
  
   float tx=1.5;
  int i,j ,z ,y;
  
  
for(int r=0 ;r<rows;r++)
  ca:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
  ce:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
  d2:	18 16       	cp	r1, r24
  d4:	19 06       	cpc	r1, r25
  d6:	0c f4       	brge	.+2      	; 0xda <main+0x58>
  d8:	f8 c1       	rjmp	.+1008   	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
  da:	8f c2       	rjmp	.+1310   	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
for( z=0 ; z<columns ;z++) // y axis moves bit by bit
{
	

	
	if(z !=columns -1 )
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	86 15       	cp	r24, r6
  e0:	97 05       	cpc	r25, r7
  e2:	09 f4       	brne	.+2      	; 0xe6 <main+0x64>
  e4:	d9 c0       	rjmp	.+434    	; 0x298 <main+0x216>
	{
		if(c[z]==1)
  e6:	d8 01       	movw	r26, r16
  e8:	8d 91       	ld	r24, X+
  ea:	9c 91       	ld	r25, X
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	09 f0       	breq	.+2      	; 0xf2 <main+0x70>
  f0:	93 c0       	rjmp	.+294    	; 0x218 <main+0x196>
  f2:	86 e9       	ldi	r24, 0x96	; 150
  f4:	90 e0       	ldi	r25, 0x00	; 0
			//puncher
		for(int j=0;j<150;j++)
			{
				
				
				PORTA = 0x01;
  f6:	fb bb       	out	0x1b, r31	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	a3 ef       	ldi	r26, 0xF3	; 243
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	11 97       	sbiw	r26, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <main+0x7a>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x80>
 102:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x04;
 104:	eb bb       	out	0x1b, r30	; 27
 106:	a3 ef       	ldi	r26, 0xF3	; 243
 108:	b1 e0       	ldi	r27, 0x01	; 1
 10a:	11 97       	sbiw	r26, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <main+0x88>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x8e>
 110:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x02;
 112:	7b bb       	out	0x1b, r23	; 27
 114:	a3 ef       	ldi	r26, 0xF3	; 243
 116:	b1 e0       	ldi	r27, 0x01	; 1
 118:	11 97       	sbiw	r26, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0x96>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x9c>
 11e:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x08;
 120:	6b bb       	out	0x1b, r22	; 27
 122:	a3 ef       	ldi	r26, 0xF3	; 243
 124:	b1 e0       	ldi	r27, 0x01	; 1
 126:	11 97       	sbiw	r26, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0xa4>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0xaa>
 12c:	00 00       	nop
 12e:	01 97       	sbiw	r24, 0x01	; 1
	if(z !=columns -1 )
	{
		if(c[z]==1)
		{
			//puncher
		for(int j=0;j<150;j++)
 130:	11 f7       	brne	.-60     	; 0xf6 <main+0x74>
 132:	8f e4       	ldi	r24, 0x4F	; 79
 134:	93 ec       	ldi	r25, 0xC3	; 195
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <main+0xb4>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0xba>
 13c:	00 00       	nop
 13e:	89 e1       	ldi	r24, 0x19	; 25
 140:	90 e0       	ldi	r25, 0x00	; 0
			_delay_ms(200);
			for(int j=0;j<25;j++)
			{
				
				
				PORTA = 0x01;
 142:	fb bb       	out	0x1b, r31	; 27
 144:	a3 ef       	ldi	r26, 0xF3	; 243
 146:	b1 e0       	ldi	r27, 0x01	; 1
 148:	11 97       	sbiw	r26, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0xc6>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0xcc>
 14e:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x04;
 150:	eb bb       	out	0x1b, r30	; 27
 152:	a3 ef       	ldi	r26, 0xF3	; 243
 154:	b1 e0       	ldi	r27, 0x01	; 1
 156:	11 97       	sbiw	r26, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <main+0xd4>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0xda>
 15c:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x02;
 15e:	7b bb       	out	0x1b, r23	; 27
 160:	a3 ef       	ldi	r26, 0xF3	; 243
 162:	b1 e0       	ldi	r27, 0x01	; 1
 164:	11 97       	sbiw	r26, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0xe2>
 168:	00 c0       	rjmp	.+0      	; 0x16a <main+0xe8>
 16a:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x08;
 16c:	6b bb       	out	0x1b, r22	; 27
 16e:	a3 ef       	ldi	r26, 0xF3	; 243
 170:	b1 e0       	ldi	r27, 0x01	; 1
 172:	11 97       	sbiw	r26, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <main+0xf0>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0xf6>
 178:	00 00       	nop
 17a:	01 97       	sbiw	r24, 0x01	; 1
				_delay_ms(tz);
				PORTA = 0x08;
				_delay_ms(tz);
			}
			_delay_ms(200);
			for(int j=0;j<25;j++)
 17c:	11 f7       	brne	.-60     	; 0x142 <main+0xc0>
 17e:	8f e4       	ldi	r24, 0x4F	; 79
 180:	93 ec       	ldi	r25, 0xC3	; 195
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <main+0x100>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0x106>
 188:	00 00       	nop
 18a:	88 e3       	ldi	r24, 0x38	; 56
 18c:	90 e0       	ldi	r25, 0x00	; 0
			//y -move forward
			for( j=0;j<56;j++) //449
			{
				
				
				PORTB = 0x08;
 18e:	68 bb       	out	0x18, r22	; 24
 190:	a6 e7       	ldi	r26, 0x76	; 118
 192:	b1 e0       	ldi	r27, 0x01	; 1
 194:	11 97       	sbiw	r26, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <main+0x112>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x118>
 19a:	00 00       	nop
				_delay_ms(tx);
				PORTB = 0x02;
 19c:	78 bb       	out	0x18, r23	; 24
 19e:	a6 e7       	ldi	r26, 0x76	; 118
 1a0:	b1 e0       	ldi	r27, 0x01	; 1
 1a2:	11 97       	sbiw	r26, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <main+0x120>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x126>
 1a8:	00 00       	nop
				_delay_ms(tx);
				PORTB = 0x04;
 1aa:	e8 bb       	out	0x18, r30	; 24
 1ac:	a6 e7       	ldi	r26, 0x76	; 118
 1ae:	b1 e0       	ldi	r27, 0x01	; 1
 1b0:	11 97       	sbiw	r26, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <main+0x12e>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x134>
 1b6:	00 00       	nop
				_delay_ms(tx);
				PORTB = 0x01;
 1b8:	f8 bb       	out	0x18, r31	; 24
 1ba:	a6 e7       	ldi	r26, 0x76	; 118
 1bc:	b1 e0       	ldi	r27, 0x01	; 1
 1be:	11 97       	sbiw	r26, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <main+0x13c>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <main+0x142>
 1c4:	00 00       	nop
 1c6:	01 97       	sbiw	r24, 0x01	; 1
			}
			_delay_ms(200);
		
		
			//y -move forward
			for( j=0;j<56;j++) //449
 1c8:	11 f7       	brne	.-60     	; 0x18e <main+0x10c>
 1ca:	89 e1       	ldi	r24, 0x19	; 25
 1cc:	90 e0       	ldi	r25, 0x00	; 0
			//puncher lifting upwards
				for(int j=0;j<25;j++)
				{
					
					
					PORTA = 0x08;
 1ce:	6b bb       	out	0x1b, r22	; 27
 1d0:	a3 ef       	ldi	r26, 0xF3	; 243
 1d2:	b1 e0       	ldi	r27, 0x01	; 1
 1d4:	11 97       	sbiw	r26, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <main+0x152>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <main+0x158>
 1da:	00 00       	nop
					_delay_ms(tz);
					PORTA = 0x02;
 1dc:	7b bb       	out	0x1b, r23	; 27
 1de:	a3 ef       	ldi	r26, 0xF3	; 243
 1e0:	b1 e0       	ldi	r27, 0x01	; 1
 1e2:	11 97       	sbiw	r26, 0x01	; 1
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <main+0x160>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x166>
 1e8:	00 00       	nop
					_delay_ms(tz);
					PORTA = 0x04;
 1ea:	eb bb       	out	0x1b, r30	; 27
 1ec:	a3 ef       	ldi	r26, 0xF3	; 243
 1ee:	b1 e0       	ldi	r27, 0x01	; 1
 1f0:	11 97       	sbiw	r26, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <main+0x16e>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <main+0x174>
 1f6:	00 00       	nop
					_delay_ms(tz);
					PORTA = 0x01;
 1f8:	fb bb       	out	0x1b, r31	; 27
 1fa:	a3 ef       	ldi	r26, 0xF3	; 243
 1fc:	b1 e0       	ldi	r27, 0x01	; 1
 1fe:	11 97       	sbiw	r26, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <main+0x17c>
 202:	00 c0       	rjmp	.+0      	; 0x204 <main+0x182>
 204:	00 00       	nop
 206:	01 97       	sbiw	r24, 0x01	; 1
				PORTB = 0x01;
				_delay_ms(tx);
			}
			
			//puncher lifting upwards
				for(int j=0;j<25;j++)
 208:	11 f7       	brne	.-60     	; 0x1ce <main+0x14c>
 20a:	8f e4       	ldi	r24, 0x4F	; 79
 20c:	93 ec       	ldi	r25, 0xC3	; 195
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <main+0x18c>
 212:	00 c0       	rjmp	.+0      	; 0x214 <main+0x192>
 214:	00 00       	nop
 216:	eb c1       	rjmp	.+982    	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 218:	89 e1       	ldi	r24, 0x19	; 25
 21a:	90 e0       	ldi	r25, 0x00	; 0
		//puncher lifting upwards
		for(int j=0;j<25;j++)
		{
			
			
			PORTA = 0x08;
 21c:	6b bb       	out	0x1b, r22	; 27
 21e:	a3 ef       	ldi	r26, 0xF3	; 243
 220:	b1 e0       	ldi	r27, 0x01	; 1
 222:	11 97       	sbiw	r26, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <main+0x1a0>
 226:	00 c0       	rjmp	.+0      	; 0x228 <main+0x1a6>
 228:	00 00       	nop
			_delay_ms(tz);
			PORTA = 0x02;
 22a:	7b bb       	out	0x1b, r23	; 27
 22c:	a3 ef       	ldi	r26, 0xF3	; 243
 22e:	b1 e0       	ldi	r27, 0x01	; 1
 230:	11 97       	sbiw	r26, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <main+0x1ae>
 234:	00 c0       	rjmp	.+0      	; 0x236 <main+0x1b4>
 236:	00 00       	nop
			_delay_ms(tz);
			PORTA = 0x04;
 238:	eb bb       	out	0x1b, r30	; 27
 23a:	a3 ef       	ldi	r26, 0xF3	; 243
 23c:	b1 e0       	ldi	r27, 0x01	; 1
 23e:	11 97       	sbiw	r26, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <main+0x1bc>
 242:	00 c0       	rjmp	.+0      	; 0x244 <main+0x1c2>
 244:	00 00       	nop
			_delay_ms(tz);
			PORTA = 0x01;
 246:	fb bb       	out	0x1b, r31	; 27
 248:	a3 ef       	ldi	r26, 0xF3	; 243
 24a:	b1 e0       	ldi	r27, 0x01	; 1
 24c:	11 97       	sbiw	r26, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <main+0x1ca>
 250:	00 c0       	rjmp	.+0      	; 0x252 <main+0x1d0>
 252:	00 00       	nop
 254:	01 97       	sbiw	r24, 0x01	; 1
				
				

		}else
		//puncher lifting upwards
		for(int j=0;j<25;j++)
 256:	11 f7       	brne	.-60     	; 0x21c <main+0x19a>
 258:	ca c1       	rjmp	.+916    	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
		}
			for( j=0;j<56;j++) //449
			{
				
				
				PORTB = 0x08;
 25a:	68 bb       	out	0x18, r22	; 24
 25c:	a6 e7       	ldi	r26, 0x76	; 118
 25e:	b1 e0       	ldi	r27, 0x01	; 1
 260:	11 97       	sbiw	r26, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <main+0x1de>
 264:	00 c0       	rjmp	.+0      	; 0x266 <main+0x1e4>
 266:	00 00       	nop
				_delay_ms(tx);
				PORTB = 0x02;
 268:	78 bb       	out	0x18, r23	; 24
 26a:	a6 e7       	ldi	r26, 0x76	; 118
 26c:	b1 e0       	ldi	r27, 0x01	; 1
 26e:	11 97       	sbiw	r26, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <main+0x1ec>
 272:	00 c0       	rjmp	.+0      	; 0x274 <main+0x1f2>
 274:	00 00       	nop
				_delay_ms(tx);
				PORTB = 0x04;
 276:	e8 bb       	out	0x18, r30	; 24
 278:	a6 e7       	ldi	r26, 0x76	; 118
 27a:	b1 e0       	ldi	r27, 0x01	; 1
 27c:	11 97       	sbiw	r26, 0x01	; 1
 27e:	f1 f7       	brne	.-4      	; 0x27c <main+0x1fa>
 280:	00 c0       	rjmp	.+0      	; 0x282 <main+0x200>
 282:	00 00       	nop
				_delay_ms(tx);
				PORTB = 0x01;
 284:	f8 bb       	out	0x18, r31	; 24
 286:	a6 e7       	ldi	r26, 0x76	; 118
 288:	b1 e0       	ldi	r27, 0x01	; 1
 28a:	11 97       	sbiw	r26, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <main+0x208>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <main+0x20e>
 290:	00 00       	nop
 292:	01 97       	sbiw	r24, 0x01	; 1
			PORTA = 0x04;
			_delay_ms(tz);
			PORTA = 0x01;
			_delay_ms(tz);
		}
			for( j=0;j<56;j++) //449
 294:	11 f7       	brne	.-60     	; 0x25a <main+0x1d8>
 296:	c2 c0       	rjmp	.+388    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
		
	}else
		{
			//puncher is at the end of the row
		
			if(c[z] ==1)
 298:	d8 01       	movw	r26, r16
 29a:	8d 91       	ld	r24, X+
 29c:	9c 91       	ld	r25, X
 29e:	01 97       	sbiw	r24, 0x01	; 1
 2a0:	51 f0       	breq	.+20     	; 0x2b6 <main+0x234>
				}
			}
			else
			{
		
				for(y=0; y<columns -1;y++) //y moves backwards
 2a2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <columns>
 2a6:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <columns+0x1>
 2aa:	01 97       	sbiw	r24, 0x01	; 1
 2ac:	18 16       	cp	r1, r24
 2ae:	19 06       	cpc	r1, r25
 2b0:	0c f4       	brge	.+2      	; 0x2b4 <main+0x232>
 2b2:	af c0       	rjmp	.+350    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 2b4:	b3 c0       	rjmp	.+358    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 2b6:	86 e9       	ldi	r24, 0x96	; 150
 2b8:	90 e0       	ldi	r25, 0x00	; 0
			//puncher
			for(int j=0;j<150;j++)
			{
				
				
				PORTA = 0x01;
 2ba:	fb bb       	out	0x1b, r31	; 27
 2bc:	a3 ef       	ldi	r26, 0xF3	; 243
 2be:	b1 e0       	ldi	r27, 0x01	; 1
 2c0:	11 97       	sbiw	r26, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <main+0x23e>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x244>
 2c6:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x04;
 2c8:	eb bb       	out	0x1b, r30	; 27
 2ca:	a3 ef       	ldi	r26, 0xF3	; 243
 2cc:	b1 e0       	ldi	r27, 0x01	; 1
 2ce:	11 97       	sbiw	r26, 0x01	; 1
 2d0:	f1 f7       	brne	.-4      	; 0x2ce <main+0x24c>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <main+0x252>
 2d4:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x02;
 2d6:	7b bb       	out	0x1b, r23	; 27
 2d8:	a3 ef       	ldi	r26, 0xF3	; 243
 2da:	b1 e0       	ldi	r27, 0x01	; 1
 2dc:	11 97       	sbiw	r26, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <main+0x25a>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <main+0x260>
 2e2:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x08;
 2e4:	6b bb       	out	0x1b, r22	; 27
 2e6:	a3 ef       	ldi	r26, 0xF3	; 243
 2e8:	b1 e0       	ldi	r27, 0x01	; 1
 2ea:	11 97       	sbiw	r26, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <main+0x268>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <main+0x26e>
 2f0:	00 00       	nop
 2f2:	01 97       	sbiw	r24, 0x01	; 1
		
			if(c[z] ==1)
			{
				//Giving only one punch
			//puncher
			for(int j=0;j<150;j++)
 2f4:	11 f7       	brne	.-60     	; 0x2ba <main+0x238>
 2f6:	8f e4       	ldi	r24, 0x4F	; 79
 2f8:	93 ec       	ldi	r25, 0xC3	; 195
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <main+0x278>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x27e>
 300:	00 00       	nop
 302:	89 e1       	ldi	r24, 0x19	; 25
 304:	90 e0       	ldi	r25, 0x00	; 0
			_delay_ms(200);
			for(int j=0;j<25;j++)
			{
				
				
				PORTA = 0x01;
 306:	fb bb       	out	0x1b, r31	; 27
 308:	a3 ef       	ldi	r26, 0xF3	; 243
 30a:	b1 e0       	ldi	r27, 0x01	; 1
 30c:	11 97       	sbiw	r26, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <main+0x28a>
 310:	00 c0       	rjmp	.+0      	; 0x312 <main+0x290>
 312:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x04;
 314:	eb bb       	out	0x1b, r30	; 27
 316:	a3 ef       	ldi	r26, 0xF3	; 243
 318:	b1 e0       	ldi	r27, 0x01	; 1
 31a:	11 97       	sbiw	r26, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <main+0x298>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x29e>
 320:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x02;
 322:	7b bb       	out	0x1b, r23	; 27
 324:	a3 ef       	ldi	r26, 0xF3	; 243
 326:	b1 e0       	ldi	r27, 0x01	; 1
 328:	11 97       	sbiw	r26, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <main+0x2a6>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <main+0x2ac>
 32e:	00 00       	nop
				_delay_ms(tz);
				PORTA = 0x08;
 330:	6b bb       	out	0x1b, r22	; 27
 332:	a3 ef       	ldi	r26, 0xF3	; 243
 334:	b1 e0       	ldi	r27, 0x01	; 1
 336:	11 97       	sbiw	r26, 0x01	; 1
 338:	f1 f7       	brne	.-4      	; 0x336 <main+0x2b4>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0x2ba>
 33c:	00 00       	nop
 33e:	01 97       	sbiw	r24, 0x01	; 1
				_delay_ms(tz);
				PORTA = 0x08;
				_delay_ms(tz);
			}
			_delay_ms(200);
			for(int j=0;j<25;j++)
 340:	11 f7       	brne	.-60     	; 0x306 <main+0x284>
 342:	8f e4       	ldi	r24, 0x4F	; 79
 344:	93 ec       	ldi	r25, 0xC3	; 195
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <main+0x2c4>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <main+0x2ca>
 34c:	00 00       	nop
			}
			_delay_ms(200);

		
				// coming back to the starting point
				for(y=0; y<columns-1 ;y++) //y moves backwards
 34e:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <columns>
 352:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <columns+0x1>
 356:	01 97       	sbiw	r24, 0x01	; 1
 358:	18 16       	cp	r1, r24
 35a:	19 06       	cpc	r1, r25
 35c:	5c f1       	brlt	.+86     	; 0x3b4 <main+0x332>
 35e:	5e c0       	rjmp	.+188    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
				{
					for( i= 0; i<56 ;i++)
					{
						PORTB = 0x01;
 360:	58 bb       	out	0x18, r21	; 24
 362:	a6 e7       	ldi	r26, 0x76	; 118
 364:	b1 e0       	ldi	r27, 0x01	; 1
 366:	11 97       	sbiw	r26, 0x01	; 1
 368:	f1 f7       	brne	.-4      	; 0x366 <main+0x2e4>
 36a:	00 c0       	rjmp	.+0      	; 0x36c <main+0x2ea>
 36c:	00 00       	nop
						_delay_ms(tx);
						PORTB = 0x04;
 36e:	48 bb       	out	0x18, r20	; 24
 370:	a6 e7       	ldi	r26, 0x76	; 118
 372:	b1 e0       	ldi	r27, 0x01	; 1
 374:	11 97       	sbiw	r26, 0x01	; 1
 376:	f1 f7       	brne	.-4      	; 0x374 <main+0x2f2>
 378:	00 c0       	rjmp	.+0      	; 0x37a <main+0x2f8>
 37a:	00 00       	nop
						_delay_ms(tx);
						PORTB = 0x02;
 37c:	38 bb       	out	0x18, r19	; 24
 37e:	a6 e7       	ldi	r26, 0x76	; 118
 380:	b1 e0       	ldi	r27, 0x01	; 1
 382:	11 97       	sbiw	r26, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <main+0x300>
 386:	00 c0       	rjmp	.+0      	; 0x388 <main+0x306>
 388:	00 00       	nop
						_delay_ms(tx);
						PORTB = 0x08;
 38a:	28 bb       	out	0x18, r18	; 24
 38c:	a6 e7       	ldi	r26, 0x76	; 118
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	11 97       	sbiw	r26, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <main+0x30e>
 394:	00 c0       	rjmp	.+0      	; 0x396 <main+0x314>
 396:	00 00       	nop
 398:	01 97       	sbiw	r24, 0x01	; 1

		
				// coming back to the starting point
				for(y=0; y<columns-1 ;y++) //y moves backwards
				{
					for( i= 0; i<56 ;i++)
 39a:	11 f7       	brne	.-60     	; 0x360 <main+0x2de>
			}
			_delay_ms(200);

		
				// coming back to the starting point
				for(y=0; y<columns-1 ;y++) //y moves backwards
 39c:	bf ef       	ldi	r27, 0xFF	; 255
 39e:	eb 1a       	sub	r14, r27
 3a0:	fb 0a       	sbc	r15, r27
 3a2:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <columns>
 3a6:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <columns+0x1>
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	e8 16       	cp	r14, r24
 3ae:	f9 06       	cpc	r15, r25
 3b0:	1c f0       	brlt	.+6      	; 0x3b8 <main+0x336>
 3b2:	34 c0       	rjmp	.+104    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3b4:	e1 2c       	mov	r14, r1
 3b6:	f1 2c       	mov	r15, r1
 3b8:	88 e3       	ldi	r24, 0x38	; 56
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	d1 cf       	rjmp	.-94     	; 0x360 <main+0x2de>
		
				for(y=0; y<columns -1;y++) //y moves backwards
				{
					for( i= 0; i<56 ;i++)
					{
					PORTB = 0x01;
 3be:	58 bb       	out	0x18, r21	; 24
 3c0:	a6 e7       	ldi	r26, 0x76	; 118
 3c2:	b1 e0       	ldi	r27, 0x01	; 1
 3c4:	11 97       	sbiw	r26, 0x01	; 1
 3c6:	f1 f7       	brne	.-4      	; 0x3c4 <main+0x342>
 3c8:	00 c0       	rjmp	.+0      	; 0x3ca <main+0x348>
 3ca:	00 00       	nop
					_delay_ms(tx);
					PORTB = 0x04;
 3cc:	48 bb       	out	0x18, r20	; 24
 3ce:	a6 e7       	ldi	r26, 0x76	; 118
 3d0:	b1 e0       	ldi	r27, 0x01	; 1
 3d2:	11 97       	sbiw	r26, 0x01	; 1
 3d4:	f1 f7       	brne	.-4      	; 0x3d2 <main+0x350>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <main+0x356>
 3d8:	00 00       	nop
					_delay_ms(tx);
					PORTB = 0x02;
 3da:	38 bb       	out	0x18, r19	; 24
 3dc:	a6 e7       	ldi	r26, 0x76	; 118
 3de:	b1 e0       	ldi	r27, 0x01	; 1
 3e0:	11 97       	sbiw	r26, 0x01	; 1
 3e2:	f1 f7       	brne	.-4      	; 0x3e0 <main+0x35e>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <main+0x364>
 3e6:	00 00       	nop
					_delay_ms(tx);
					PORTB = 0x08;
 3e8:	28 bb       	out	0x18, r18	; 24
 3ea:	a6 e7       	ldi	r26, 0x76	; 118
 3ec:	b1 e0       	ldi	r27, 0x01	; 1
 3ee:	11 97       	sbiw	r26, 0x01	; 1
 3f0:	f1 f7       	brne	.-4      	; 0x3ee <main+0x36c>
 3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <main+0x372>
 3f4:	00 00       	nop
 3f6:	01 97       	sbiw	r24, 0x01	; 1
			else
			{
		
				for(y=0; y<columns -1;y++) //y moves backwards
				{
					for( i= 0; i<56 ;i++)
 3f8:	11 f7       	brne	.-60     	; 0x3be <main+0x33c>
				}
			}
			else
			{
		
				for(y=0; y<columns -1;y++) //y moves backwards
 3fa:	bf ef       	ldi	r27, 0xFF	; 255
 3fc:	eb 1a       	sub	r14, r27
 3fe:	fb 0a       	sbc	r15, r27
 400:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <columns>
 404:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <columns+0x1>
 408:	01 97       	sbiw	r24, 0x01	; 1
 40a:	e8 16       	cp	r14, r24
 40c:	f9 06       	cpc	r15, r25
 40e:	1c f0       	brlt	.+6      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 410:	05 c0       	rjmp	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 412:	e1 2c       	mov	r14, r1
 414:	f1 2c       	mov	r15, r1
			}
			_delay_ms(200);

		
				// coming back to the starting point
				for(y=0; y<columns-1 ;y++) //y moves backwards
 416:	88 e3       	ldi	r24, 0x38	; 56
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	d1 cf       	rjmp	.-94     	; 0x3be <main+0x33c>
  
  
for(int r=0 ;r<rows;r++)
{
	
for( z=0 ; z<columns ;z++) // y axis moves bit by bit
 41c:	8f ef       	ldi	r24, 0xFF	; 255
 41e:	68 1a       	sub	r6, r24
 420:	78 0a       	sbc	r7, r24
 422:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <columns>
 426:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <columns+0x1>
 42a:	0e 5f       	subi	r16, 0xFE	; 254
 42c:	1f 4f       	sbci	r17, 0xFF	; 255
 42e:	68 16       	cp	r6, r24
 430:	79 06       	cpc	r7, r25
 432:	0c f4       	brge	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	53 ce       	rjmp	.-858    	; 0xdc <main+0x5a>
 436:	de c0       	rjmp	.+444    	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>

	//x axis moves forward
	for(z=0 ;z<57;z++)
	{
		
		PORTD = 0x80;
 438:	c2 ba       	out	0x12, r12	; 18
 43a:	a6 e7       	ldi	r26, 0x76	; 118
 43c:	b1 e0       	ldi	r27, 0x01	; 1
 43e:	11 97       	sbiw	r26, 0x01	; 1
 440:	f1 f7       	brne	.-4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 442:	00 c0       	rjmp	.+0      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 444:	00 00       	nop
		_delay_ms(tx);
		PORTD = 0x20;
 446:	d2 ba       	out	0x12, r13	; 18
 448:	a6 e7       	ldi	r26, 0x76	; 118
 44a:	b1 e0       	ldi	r27, 0x01	; 1
 44c:	11 97       	sbiw	r26, 0x01	; 1
 44e:	f1 f7       	brne	.-4      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 452:	00 00       	nop
		_delay_ms(tx);
		PORTD = 0x40;
 454:	b2 ba       	out	0x12, r11	; 18
 456:	a6 e7       	ldi	r26, 0x76	; 118
 458:	b1 e0       	ldi	r27, 0x01	; 1
 45a:	11 97       	sbiw	r26, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 460:	00 00       	nop
		_delay_ms(tx);
		PORTD = 0x10;
 462:	a2 ba       	out	0x12, r10	; 18
 464:	a6 e7       	ldi	r26, 0x76	; 118
 466:	b1 e0       	ldi	r27, 0x01	; 1
 468:	11 97       	sbiw	r26, 0x01	; 1
 46a:	f1 f7       	brne	.-4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 46e:	00 00       	nop
 470:	01 97       	sbiw	r24, 0x01	; 1
			}
	}
	}

	//x axis moves forward
	for(z=0 ;z<57;z++)
 472:	11 f7       	brne	.-60     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 474:	89 e1       	ldi	r24, 0x19	; 25
 476:	90 e0       	ldi	r25, 0x00	; 0
	}
		for(int j=0;j<25;j++)
		{
			
			 
			PORTA = 0x08;
 478:	6b bb       	out	0x1b, r22	; 27
 47a:	a3 ef       	ldi	r26, 0xF3	; 243
 47c:	b1 e0       	ldi	r27, 0x01	; 1
 47e:	11 97       	sbiw	r26, 0x01	; 1
 480:	f1 f7       	brne	.-4      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 482:	00 c0       	rjmp	.+0      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 484:	00 00       	nop
			_delay_ms(tz);
			PORTA = 0x02;
 486:	7b bb       	out	0x1b, r23	; 27
 488:	a3 ef       	ldi	r26, 0xF3	; 243
 48a:	b1 e0       	ldi	r27, 0x01	; 1
 48c:	11 97       	sbiw	r26, 0x01	; 1
 48e:	f1 f7       	brne	.-4      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 490:	00 c0       	rjmp	.+0      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 492:	00 00       	nop
			_delay_ms(tz);
			PORTA = 0x04;
 494:	eb bb       	out	0x1b, r30	; 27
 496:	a3 ef       	ldi	r26, 0xF3	; 243
 498:	b1 e0       	ldi	r27, 0x01	; 1
 49a:	11 97       	sbiw	r26, 0x01	; 1
 49c:	f1 f7       	brne	.-4      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 49e:	00 c0       	rjmp	.+0      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 4a0:	00 00       	nop
			_delay_ms(tz);
			PORTA = 0x01;
 4a2:	fb bb       	out	0x1b, r31	; 27
 4a4:	a3 ef       	ldi	r26, 0xF3	; 243
 4a6:	b1 e0       	ldi	r27, 0x01	; 1
 4a8:	11 97       	sbiw	r26, 0x01	; 1
 4aa:	f1 f7       	brne	.-4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4ae:	00 00       	nop
 4b0:	01 97       	sbiw	r24, 0x01	; 1
		_delay_ms(tx);
		PORTD = 0x10;
		_delay_ms(tx);
		
	}
		for(int j=0;j<25;j++)
 4b2:	11 f7       	brne	.-60     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
  
   float tx=1.5;
  int i,j ,z ,y;
  
  
for(int r=0 ;r<rows;r++)
 4b4:	bf ef       	ldi	r27, 0xFF	; 255
 4b6:	8b 1a       	sub	r8, r27
 4b8:	9b 0a       	sbc	r9, r27
 4ba:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 4be:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 4c2:	88 16       	cp	r8, r24
 4c4:	99 06       	cpc	r9, r25
 4c6:	bc f0       	brlt	.+46     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4c8:	98 c0       	rjmp	.+304    	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 4ca:	81 2c       	mov	r8, r1
 4cc:	91 2c       	mov	r9, r1
			//puncher
			for(int j=0;j<150;j++)
			{
				
				
				PORTA = 0x01;
 4ce:	f1 e0       	ldi	r31, 0x01	; 1
				_delay_ms(tz);
				PORTA = 0x04;
 4d0:	e4 e0       	ldi	r30, 0x04	; 4
				_delay_ms(tz);
				PORTA = 0x02;
 4d2:	72 e0       	ldi	r23, 0x02	; 2
				_delay_ms(tz);
				PORTA = 0x08;
 4d4:	68 e0       	ldi	r22, 0x08	; 8
			//puncher
			for(int j=0;j<150;j++)
			{
				
				
				PORTA = 0x01;
 4d6:	5f 2f       	mov	r21, r31
				_delay_ms(tz);
				PORTA = 0x04;
 4d8:	4e 2f       	mov	r20, r30
				_delay_ms(tz);
				PORTA = 0x02;
 4da:	37 2f       	mov	r19, r23
				_delay_ms(tz);
				PORTA = 0x08;
 4dc:	26 2f       	mov	r18, r22

	//x axis moves forward
	for(z=0 ;z<57;z++)
	{
		
		PORTD = 0x80;
 4de:	68 94       	set
 4e0:	cc 24       	eor	r12, r12
 4e2:	c7 f8       	bld	r12, 7
		_delay_ms(tx);
		PORTD = 0x20;
 4e4:	68 94       	set
 4e6:	dd 24       	eor	r13, r13
 4e8:	d5 f8       	bld	r13, 5
		_delay_ms(tx);
		PORTD = 0x40;
 4ea:	68 94       	set
 4ec:	bb 24       	eor	r11, r11
 4ee:	b6 f8       	bld	r11, 6
		_delay_ms(tx);
		PORTD = 0x10;
 4f0:	68 94       	set
 4f2:	aa 24       	eor	r10, r10
 4f4:	a4 f8       	bld	r10, 4
  
  
for(int r=0 ;r<rows;r++)
{
	
for( z=0 ; z<columns ;z++) // y axis moves bit by bit
 4f6:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <columns>
 4fa:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <columns+0x1>
 4fe:	18 16       	cp	r1, r24
 500:	19 06       	cpc	r1, r25
 502:	0c f0       	brlt	.+2      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 504:	77 c0       	rjmp	.+238    	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 506:	8e 01       	movw	r16, r28
 508:	0f 5f       	subi	r16, 0xFF	; 255
 50a:	1f 4f       	sbci	r17, 0xFF	; 255
 50c:	61 2c       	mov	r6, r1
 50e:	71 2c       	mov	r7, r1
 510:	e5 cd       	rjmp	.-1078   	; 0xdc <main+0x5a>
//puncher lifts 
	for(int j=0;j<25;j++)
	{
		
		
		PORTA = 0x08;
 512:	5b bb       	out	0x1b, r21	; 27
 514:	e3 ef       	ldi	r30, 0xF3	; 243
 516:	f1 e0       	ldi	r31, 0x01	; 1
 518:	31 97       	sbiw	r30, 0x01	; 1
 51a:	f1 f7       	brne	.-4      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 51c:	00 c0       	rjmp	.+0      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 51e:	00 00       	nop
		_delay_ms(tz);
		PORTA = 0x02;
 520:	4b bb       	out	0x1b, r20	; 27
 522:	a3 ef       	ldi	r26, 0xF3	; 243
 524:	b1 e0       	ldi	r27, 0x01	; 1
 526:	11 97       	sbiw	r26, 0x01	; 1
 528:	f1 f7       	brne	.-4      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 52c:	00 00       	nop
		_delay_ms(tz);
		PORTA = 0x04;
 52e:	3b bb       	out	0x1b, r19	; 27
 530:	e3 ef       	ldi	r30, 0xF3	; 243
 532:	f1 e0       	ldi	r31, 0x01	; 1
 534:	31 97       	sbiw	r30, 0x01	; 1
 536:	f1 f7       	brne	.-4      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 538:	00 c0       	rjmp	.+0      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 53a:	00 00       	nop
		_delay_ms(tz);
		PORTA = 0x01;
 53c:	2b bb       	out	0x1b, r18	; 27
 53e:	a3 ef       	ldi	r26, 0xF3	; 243
 540:	b1 e0       	ldi	r27, 0x01	; 1
 542:	11 97       	sbiw	r26, 0x01	; 1
 544:	f1 f7       	brne	.-4      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 546:	00 c0       	rjmp	.+0      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 548:	00 00       	nop
 54a:	01 97       	sbiw	r24, 0x01	; 1
			_delay_ms(tz);
		}
}
//x coming back
//puncher lifts 
	for(int j=0;j<25;j++)
 54c:	11 f7       	brne	.-60     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 54e:	63 e0       	ldi	r22, 0x03	; 3
 550:	70 e0       	ldi	r23, 0x00	; 0
for(j=0 ; j<3;j++)
{
	for(z=0 ;z<57;z++)
	{
		
		PORTD = 0x10;
 552:	50 e1       	ldi	r21, 0x10	; 16
		_delay_ms(tx);
		PORTD = 0x40;
 554:	40 e4       	ldi	r20, 0x40	; 64
		_delay_ms(tx);
		PORTD = 0x20;
 556:	30 e2       	ldi	r19, 0x20	; 32
		_delay_ms(tx);
		PORTD = 0x80;
 558:	20 e8       	ldi	r18, 0x80	; 128
 55a:	21 c0       	rjmp	.+66     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
for(j=0 ; j<3;j++)
{
	for(z=0 ;z<57;z++)
	{
		
		PORTD = 0x10;
 55c:	52 bb       	out	0x12, r21	; 18
 55e:	e6 e7       	ldi	r30, 0x76	; 118
 560:	f1 e0       	ldi	r31, 0x01	; 1
 562:	31 97       	sbiw	r30, 0x01	; 1
 564:	f1 f7       	brne	.-4      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 566:	00 c0       	rjmp	.+0      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 568:	00 00       	nop
		_delay_ms(tx);
		PORTD = 0x40;
 56a:	42 bb       	out	0x12, r20	; 18
 56c:	a6 e7       	ldi	r26, 0x76	; 118
 56e:	b1 e0       	ldi	r27, 0x01	; 1
 570:	11 97       	sbiw	r26, 0x01	; 1
 572:	f1 f7       	brne	.-4      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 574:	00 c0       	rjmp	.+0      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 576:	00 00       	nop
		_delay_ms(tx);
		PORTD = 0x20;
 578:	32 bb       	out	0x12, r19	; 18
 57a:	e6 e7       	ldi	r30, 0x76	; 118
 57c:	f1 e0       	ldi	r31, 0x01	; 1
 57e:	31 97       	sbiw	r30, 0x01	; 1
 580:	f1 f7       	brne	.-4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 582:	00 c0       	rjmp	.+0      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 584:	00 00       	nop
		_delay_ms(tx);
		PORTD = 0x80;
 586:	22 bb       	out	0x12, r18	; 18
 588:	a6 e7       	ldi	r26, 0x76	; 118
 58a:	b1 e0       	ldi	r27, 0x01	; 1
 58c:	11 97       	sbiw	r26, 0x01	; 1
 58e:	f1 f7       	brne	.-4      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 590:	00 c0       	rjmp	.+0      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 592:	00 00       	nop
 594:	01 97       	sbiw	r24, 0x01	; 1
		PORTA = 0x01;
		_delay_ms(tz);
	}
for(j=0 ; j<3;j++)
{
	for(z=0 ;z<57;z++)
 596:	11 f7       	brne	.-60     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 598:	61 50       	subi	r22, 0x01	; 1
 59a:	71 09       	sbc	r23, r1
		PORTA = 0x04;
		_delay_ms(tz);
		PORTA = 0x01;
		_delay_ms(tz);
	}
for(j=0 ; j<3;j++)
 59c:	19 f0       	breq	.+6      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
  
   float tx=1.5;
  int i,j ,z ,y;
  
  
for(int r=0 ;r<rows;r++)
 59e:	89 e3       	ldi	r24, 0x39	; 57
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	dc cf       	rjmp	.-72     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 5a4:	89 e1       	ldi	r24, 0x19	; 25
 5a6:	90 e0       	ldi	r25, 0x00	; 0
}
	for(int j=0;j<25;j++)
	{
		
		
		PORTA = 0x01;
 5a8:	51 e0       	ldi	r21, 0x01	; 1
		_delay_ms(tz);
		PORTA = 0x04;
 5aa:	44 e0       	ldi	r20, 0x04	; 4
		_delay_ms(tz);
		PORTA = 0x02;
 5ac:	32 e0       	ldi	r19, 0x02	; 2
		_delay_ms(tz);
		PORTA = 0x08;
 5ae:	28 e0       	ldi	r18, 0x08	; 8
}
	for(int j=0;j<25;j++)
	{
		
		
		PORTA = 0x01;
 5b0:	5b bb       	out	0x1b, r21	; 27
 5b2:	e3 ef       	ldi	r30, 0xF3	; 243
 5b4:	f1 e0       	ldi	r31, 0x01	; 1
 5b6:	31 97       	sbiw	r30, 0x01	; 1
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5ba:	00 c0       	rjmp	.+0      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5bc:	00 00       	nop
		_delay_ms(tz);
		PORTA = 0x04;
 5be:	4b bb       	out	0x1b, r20	; 27
 5c0:	a3 ef       	ldi	r26, 0xF3	; 243
 5c2:	b1 e0       	ldi	r27, 0x01	; 1
 5c4:	11 97       	sbiw	r26, 0x01	; 1
 5c6:	f1 f7       	brne	.-4      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5c8:	00 c0       	rjmp	.+0      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5ca:	00 00       	nop
		_delay_ms(tz);
		PORTA = 0x02;
 5cc:	3b bb       	out	0x1b, r19	; 27
 5ce:	e3 ef       	ldi	r30, 0xF3	; 243
 5d0:	f1 e0       	ldi	r31, 0x01	; 1
 5d2:	31 97       	sbiw	r30, 0x01	; 1
 5d4:	f1 f7       	brne	.-4      	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5d6:	00 c0       	rjmp	.+0      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d8:	00 00       	nop
		_delay_ms(tz);
		PORTA = 0x08;
 5da:	2b bb       	out	0x1b, r18	; 27
 5dc:	a3 ef       	ldi	r26, 0xF3	; 243
 5de:	b1 e0       	ldi	r27, 0x01	; 1
 5e0:	11 97       	sbiw	r26, 0x01	; 1
 5e2:	f1 f7       	brne	.-4      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e6:	00 00       	nop
 5e8:	01 97       	sbiw	r24, 0x01	; 1
		_delay_ms(tx);
		PORTD = 0x80;
		_delay_ms(tx);
	}
}
	for(int j=0;j<25;j++)
 5ea:	11 f7       	brne	.-60     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ec:	0d c0       	rjmp	.+26     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5ee:	88 e3       	ldi	r24, 0x38	; 56
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	33 ce       	rjmp	.-922    	; 0x25a <main+0x1d8>
				}
			}
			else
			{
		
				for(y=0; y<columns -1;y++) //y moves backwards
 5f4:	89 e3       	ldi	r24, 0x39	; 57
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	1f cf       	rjmp	.-450    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
  
   float tx=1.5;
  int i,j ,z ,y;
  
  
for(int r=0 ;r<rows;r++)
 5fa:	89 e1       	ldi	r24, 0x19	; 25
 5fc:	90 e0       	ldi	r25, 0x00	; 0
//puncher lifts 
	for(int j=0;j<25;j++)
	{
		
		
		PORTA = 0x08;
 5fe:	58 e0       	ldi	r21, 0x08	; 8
		_delay_ms(tz);
		PORTA = 0x02;
 600:	42 e0       	ldi	r20, 0x02	; 2
		_delay_ms(tz);
		PORTA = 0x04;
 602:	34 e0       	ldi	r19, 0x04	; 4
		_delay_ms(tz);
		PORTA = 0x01;
 604:	21 e0       	ldi	r18, 0x01	; 1
 606:	85 cf       	rjmp	.-246    	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 608:	ef e4       	ldi	r30, 0x4F	; 79
 60a:	f3 ec       	ldi	r31, 0xC3	; 195
 60c:	31 97       	sbiw	r30, 0x01	; 1
 60e:	f1 f7       	brne	.-4      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 610:	00 c0       	rjmp	.+0      	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 612:	00 00       	nop
	//final
	
	


}
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	60 96       	adiw	r28, 0x10	; 16
 61a:	0f b6       	in	r0, 0x3f	; 63
 61c:	f8 94       	cli
 61e:	de bf       	out	0x3e, r29	; 62
 620:	0f be       	out	0x3f, r0	; 63
 622:	cd bf       	out	0x3d, r28	; 61
 624:	df 91       	pop	r29
 626:	cf 91       	pop	r28
 628:	1f 91       	pop	r17
 62a:	0f 91       	pop	r16
 62c:	ff 90       	pop	r15
 62e:	ef 90       	pop	r14
 630:	df 90       	pop	r13
 632:	cf 90       	pop	r12
 634:	bf 90       	pop	r11
 636:	af 90       	pop	r10
 638:	9f 90       	pop	r9
 63a:	8f 90       	pop	r8
 63c:	7f 90       	pop	r7
 63e:	6f 90       	pop	r6
 640:	08 95       	ret

00000642 <_exit>:
 642:	f8 94       	cli

00000644 <__stop_program>:
 644:	ff cf       	rjmp	.-2      	; 0x644 <__stop_program>
